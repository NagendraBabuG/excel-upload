{"ast":null,"code":"var _jsxFileName = \"/home/justcode/Desktop/intern_assg/neemtree/excel-upload/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport Response from \"./Response\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [msg, setMsg] = useState(\"Upload Xlsx files here\");\n  const [selectedFile, setSelectedFile] = useState(undefined);\n  const [isUploaded, setIsUploaded] = useState(false);\n  const [respond, setRespond] = useState(400);\n  const fileInputRef = useRef(null);\n  const handleFileUpload = async event => {\n    const tmp = event.target.files[0];\n    setSelectedFile(event.target.files[0]);\n    console.log(tmp);\n    if (event.target.files[0] === undefined) return;\n    setMsg(tmp.name);\n  };\n  const onSubmit = async () => {\n    const formData = new FormData();\n    console.log(\"selected file ,\", selectedFile);\n    if (selectedFile === undefined) {\n      setMsg(\"Error\");\n      return;\n    }\n    formData.append(\"file\", selectedFile);\n    try {\n      const config = {\n        method: \"post\",\n        maxBodyLength: Infinity,\n        url: \"https://excelupload-server.onrender.com/upload\",\n        headers: {\n          \"Content-Type\": formData.get('Content-Type')\n        },\n        data: formData\n      };\n      const resp = await axios.request(config);\n      setRespond(resp.status);\n      console.log(resp.status);\n      setIsUploaded(true);\n      console.log(resp);\n    } catch (error) {\n      console.log(error);\n      setMsg(\"Error\");\n      setRespond(400);\n      setIsUploaded(true);\n    }\n  };\n  const handleClick = () => {\n    fileInputRef.current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add From Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: \"Add Candidates to Database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: isUploaded ? /*#__PURE__*/_jsxDEV(Response, {\n        status: respond\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          accept: \".xlsx\",\n          onChange: handleFileUpload,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          className: \"upload\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faUpload,\n            size: \"2xl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          onClick: onSubmit,\n          style: {\n            display: selectedFile ? \"inline-block\" : \"none\"\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), !isUploaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FU1uNdGArFERM8wikFzfpvfHEYI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","axios","Response","FontAwesomeIcon","faUpload","jsxDEV","_jsxDEV","App","_s","msg","setMsg","selectedFile","setSelectedFile","undefined","isUploaded","setIsUploaded","respond","setRespond","fileInputRef","handleFileUpload","event","tmp","target","files","console","log","name","onSubmit","formData","FormData","append","config","method","maxBodyLength","Infinity","url","headers","get","data","resp","request","status","error","handleClick","current","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","accept","onChange","style","display","onClick","icon","size","_c","$RefreshReg$"],"sources":["/home/justcode/Desktop/intern_assg/neemtree/excel-upload/src/App.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\nimport axios from \"axios\";\nimport Response from \"./Response\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { faUpload } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction App() {\n  const [msg, setMsg] = useState(\"Upload Xlsx files here\");\n  const [selectedFile, setSelectedFile] = useState(undefined);\n  const [isUploaded, setIsUploaded] = useState(false);\n  const [respond, setRespond] = useState(400)\n  const fileInputRef = useRef(null);\n\n  const handleFileUpload = async (event) => {\n    const tmp = event.target.files[0];\n    setSelectedFile(event.target.files[0]);\n    console.log(tmp);\n    \n    if (event.target.files[0] === undefined) return;\n    setMsg(tmp.name);\n  };\n\n  const onSubmit = async () => {\n    const formData = new FormData();\n    console.log(\"selected file ,\", selectedFile);\n    if (selectedFile === undefined) {\n      setMsg(\"Error\");\n      return;\n    }\n    formData.append(\"file\", selectedFile);\n    try {\n        const config = {\n            method: \"post\",\n            maxBodyLength: Infinity,\n            url: \"https://excelupload-server.onrender.com/upload\",\n            headers: {\n              \"Content-Type\": formData.get('Content-Type')\n            },\n            data: formData,\n          };\n\n      const resp = await axios.request(config);\n      setRespond(resp.status)\n      console.log(resp.status)\n      setIsUploaded(true)\n      console.log(resp);\n    } catch (error) {\n      console.log(error);\n      setMsg(\"Error\");\n      setRespond(400)\n      setIsUploaded(true)\n    }\n  };\n\n  const handleClick = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"navbar\"><h3>Add From Excel</h3></div>\n      <div className=\"heading\">Add Candidates to Database</div>\n      \n      <div className=\"container\">\n      { isUploaded ? <Response status = {respond}></Response>: <div>\n\n        <input\n          type=\"file\"\n          ref={fileInputRef}\n          accept=\".xlsx\"\n          onChange={handleFileUpload}\n          style={{ display: \"none\" }}\n        />\n        <button onClick={handleClick} className=\"upload\">\n          <FontAwesomeIcon icon={faUpload} size=\"2xl\"></FontAwesomeIcon>\n        </button>\n        <br></br>\n        <button className=\"submit\" onClick={onSubmit} style={{ display: selectedFile ? \"inline-block\" : \"none\" }}>\n          Submit\n        </button>\n       </div>}\n      </div>\n     {!isUploaded && <div>{msg}</div>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}